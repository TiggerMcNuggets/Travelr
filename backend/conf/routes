# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                            controllers.DestinationController.index

#trip destination routes, subroute of trips
GET         /trips/destination          controllers.TripDestinationsController.list(request: Request)
POST        /trips/destination          controllers.TripDestinationsController.add(request: Request)
DELETE      /trips/destination/:id/:orderNo          controllers.TripDestinationsController.delete(id: Long, orderNo: Int)
PUT         /trips/destination/:id/swap          controllers.TripDestinationsController.swap(request: Request, id: Long)
PUT         /trips/destination/:id/:orderNo      controllers.TripDestinationsController.update(request: Request, id: Long, orderNo: Int)

# nationalities routes
GET         /travellers/:id/nationalities          controllers.NationalityController.list(request: Request, id: Long)
POST        /travellers/:id/nationalities          controllers.NationalityController.add(request: Request, id: Long)
DELETE      /travellers/:id/nationalities          controllers.NationalityController.delete(request: Request, id: Long)

# travellers routes

#traveller type routes
GET         /travellers/:id/travellers_type        controllers.TravellerTypeController.list(request: Request, id:Long)
POST        /travellers/:id/travellers_type        controllers.TravellerTypeController.add(request: Request, id:Long)
DELETE      /travellers/:id/travellers_type        controllers.TravellerTypeController.delete(request: Request, id:Long)

# usage --> http://localhost:9000/travellers?gender=f&name=Lorenzo&minAge=10&maxAge=20&nationality=Italy&nationality=Mexico&t_type=Thrillseeker&t_type=quiete
GET         /travellers                     controllers.TravellerController.list(request: Request, fname: String ?= null, lname: String ?= null, gender: String ?= null, minAge: Integer ?= 0, maxAge: Integer ?= 150, nationality: java.util.List[String] ?= null,t_type: java.util.List[String] ?= null, orderBy: String ?= null)
GET         /travellers/:id/photo           controllers.PhotoController.list(request: Request, id: Long)
GET         /travellers/photo/:filename      controllers.PhotoController.getImageFromDatabase(filename: String)
GET         /travellers/:id                 controllers.TravellerController.showProfile(request: Request, id: Long)
POST        /travellers/:id/photo           controllers.PhotoController.uploadPersonalPhoto(request: Request, id: Long)

POST        /travellers                            controllers.TravellerController.add(request: Request)
PUT         /travellers/:id                 controllers.TravellerController.update(request: Request, id: Long)
DELETE      /travellers/:id                 controllers.TravellerController.delete(request: Request, id: Long)



# destinations routes
POST        /destinations                   controllers.DestinationController.add(request: Request)
DELETE      /destinations/:id               controllers.DestinationController.delete(request: Request, id: Long)
PUT         /destinations/:id               controllers.DestinationController.update(request: Request, id: Long)
GET        /destinations                   controllers.DestinationController.list(request: Request)
GET        /destinations/:id                   controllers.DestinationController.getOne(request: Request, id: Long)

#trip type routes
POST        /trips                      controllers.TripController.add(request: Request)
PUT         /trips/:id                  controllers.TripController.update(request: Request, id: Long)
DELETE      /trips/:id                  controllers.TripController.delete(id: Long)
GET         /trips                      controllers.TripController.list(request: Request)

# ################## REFACTORED API BELOW ######################
# AUTH ROUTES
POST        /login                          controllers.SecurityController.login(request: Request)
POST        /logout                         controllers.SecurityController.logout(request: Request)

# User

GET         /users                          controllers.UserController.getAllUsers(request: Request)


POST        /users                          controllers.UserController.addUser(request: Request)
