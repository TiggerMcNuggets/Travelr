
# SERVES VUE FILES ON PROD BUILD DONT DELETE -  MUST STAY AT TOP I HAVE NO CLUE WHY
GET         /                               controllers.FrontendController.index()

# Populate static data
POST        /api/populate                       controllers.PopulateController.populateDatabase()

POST        /api/login                          controllers.SecurityController.login(request: Request)
POST        /api/logout                         controllers.SecurityController.logout(request: Request)

# Nationalities
GET         /api/nationalities                  controllers.NationalityController.getNationalities()
GET         /api/ok                             controllers.NationalityController.test()

# Traveller Types
GET         /api/traveller-types                controllers.TravellerTypeController.getTravellerTypes()

# Travellers
GET         /api/travellers_filter              controllers.UserController.getFilteredUsers(request: Request, firstName: String ?= null, lastName: String ?= null, gender: String ?= null, minAge: Integer ?= 0, maxAge: Integer ?= 150, nationality: java.util.List[String] ?= null,travellerType: java.util.List[String] ?= null, orderBy: String ?= null)
GET         /api/travellers                     controllers.UserController.getUsers(request: Request)
POST        /api/travellers                     controllers.UserController.createUser(request: Request)
GET         /api/travellers/me                  controllers.UserController.getMe(request: Request)
GET         /api/travellers/:id                 controllers.UserController.getUser(request: Request, id: Long)
PUT         /api/travellers/:id                 controllers.UserController.updateUserGivenUser(request: Request, id:Long)
PUT         /api/travellers/:id/toggle_deleted  controllers.UserController.toggleUserDeleted(request: Request, id: Long)

# Personal Photos and Profile Photos
GET         /api/travellers/:id/photo           controllers.PhotoController.list(request: Request, id: Long)
GET         /api/travellers/photo/:filename     controllers.PhotoController.getImageFromDatabase(filename: String)

POST        /api/travellers/photo/:photo_id     controllers.PhotoController.updateUserPhoto(request: Request, photo_id: Long)
GET         /api/travellers/profile-photo/:id   controllers.PhotoController.getProfilePic(id: Long)
POST        /api/travellers/:id/photo           controllers.PhotoController.uploadPersonalPhoto(request: Request, id: Long)
PUT         /api/travellers/:id/uploadphoto     controllers.PhotoController.uploadProfilePhoto(request: Request, id: Long)
PUT         /api/travellers/:id/setphoto        controllers.PhotoController.chooseProfilePhoto(request: Request, id: Long)

# Destination Photos
GET         /api/users/:user_id/destinations/:dest_id/photo     controllers.DestinationPhotoController.list(request: Request, user_id: Long, dest_id: Long)
GET         /api/destinations/photo/:filename                   controllers.DestinationPhotoController.getImageFromDatabase(filename: String)
POST        /api/users/:user_id/destinations/:dest_id/photo     controllers.DestinationPhotoController.uploadDestinationPhoto(request: Request, user_id: Long, dest_id: Long)
PUT        /api/destinations/photo/:photo_id                    controllers.DestinationPhotoController.updateDestinationPhoto(request: Request, photo_id: Long)
PUT        /api/users/:user_id/destinations/:dest_id/photo      controllers.DestinationPhotoController.addExistingPhotoToDestinationPhotos(request: Request, user_id: Long, dest_id: Long)

# Media
POST        /api/users/:id/albums                              controllers.MediaController.createAlbumGivenUser(request: Request, id: Long)
POST        /api/users/:id/albums/:album_id                    controllers.MediaController.uploadMedia(request: Request, id: Long, album_id: Long)
GET         /api/users/:id/albums/:album_id                    controllers.MediaController.getAlbumContent(request: Request, id: Long, album_id: Long)
DELETE      /api/users/:id/albums/:album_id                    controllers.MediaController.deleteAlbum(request: Request, id: Long, album_id: Long)
PUT         /api/users/:id/albums/:album_id                    controllers.MediaController.updateAlbumGivenUser(request: Request, id: Long, album_id: Long)
PUT         /api/users/:id/albums/:album_id/media/:media_id    controllers.MediaController.addMediaToAlbum(request: Request, id: Long, album_id: Long, media_id: Long)
DELETE      /api/users/:id/albums/:album_id/media/:media_id    controllers.MediaController.deleteSingleMedia(request: Request, id: Long, album_id: Long, media_id: Long, removeAll: Integer)
POST        /api/users/:id/media/:media_id                     controllers.MediaController.updateUserMedia(request: Request, id: Long, media_id: Long)
GET         /api/users/:id/media/:filename                     controllers.MediaController.getImageFromDatabase(request: Request, id: Long, filename: String)
GET         /api/users/:id/albums                              controllers.MediaController.getUsersAlbums(request: Request, id: Long)
POST        /api/users/:id/destinations/:dest_id/media         controllers.MediaController.uploadDestinationMedia(request: Request, id: Long, dest_id: Long)


# Destinations (Old)
PUT         /api/destinations/:id               controllers.DestinationController.updateUserDestination(request: Request, id: Long)

# Destinations (NEW)
GET         /api/users/:id/destinations                                 controllers.DestinationController.getUserDestinationsGivenUser(request: Request, id: Long)
POST        /api/users/:id/destinations                                 controllers.DestinationController.createDestinationGivenUser(request: Request, id: Long)
GET         /api/users/:user_id/destinations/:dest_id                   controllers.DestinationController.getUserDestinationGivenUser(request: Request, user_id: Long, dest_id: Long)
PUT         /api/users/:userId/destinations/:destId                     controllers.DestinationController.updateUserDestinationGivenUser(request: Request, userId: Long, destId: Long)
PUT        /api/destinations/:id/make_public                            controllers.DestinationController.makeDestinationPublic(id: Long)
PUT        /api/destinations/:id/make_private                           controllers.DestinationController.makeDestinationPrivate(request: Request, id: Long)
PUT         /api/users/:user_id/destinations/:dest_id/toggle_deleted    controllers.DestinationController.toggleDestinationDeleted(request: Request, user_id: Long, dest_id: Long)


GET         /api/destinations/edit_requests                          controllers.DestinationEditRequestController.getAllRequests(request: Request)
POST        /api/destinations/edit_requests                          controllers.DestinationEditRequestController.createRequest(request: Request)
POST        /api/destinations/edit_requests/:requestId/accept        controllers.DestinationEditRequestController.acceptRequest(request: Request, requestId: Long)
POST        /api/destinations/edit_requests/:requestId/deny          controllers.DestinationEditRequestController.denyRequest(request: Request, requestId: Long)

# Groups
POST        /api/users/:user_id/group/:group_id/member/:member_id                   controllers.UserGroupController.addUserToGroup(request: Request, user_id: Long, group_id: Long, member_id: Long)
PUT         /api/users/:user_id/group/:group_id/member/:member_id/toggle_deleted    controllers.UserGroupController.removeGroupMember(request: Request, user_id: Long, group_id: Long, member_id: Long)
PUT         /api/users/:user_id/group/:group_id/member/:member_id/promote           controllers.UserGroupController.promoteGroupMember(request: Request, user_id: Long, group_id: Long, member_id: Long)
PUT         /api/users/:user_id/group/:group_id                                     controllers.UserGroupController.updateUserGroup(request: Request, user_id: Long, group_id: Long)
PUT         /api/users/:user_id/group/:group_id/toggle_deleted                      controllers.UserGroupController.deleteGroup(request: Request, user_id: Long, group_id: Long)
GET         /api/users/:user_id/group/:group_id                                     controllers.UserGroupController.getSingleGroup(request: Request, user_id: Long, group_id: Long)
POST        /api/users/:user_id/group                                               controllers.UserGroupController.createUserGroup(request: Request, user_id: Long)
GET         /api/users/:user_id/group                                               controllers.UserGroupController.getUserGroups(request: Request, user_id: Long)


# Trips (trips within trips)
POST        /api/users/:userId/trips                        controllers.TripController.createTrip(request: Request, userId: Long)
GET         /api/users/:userId/trips                        controllers.TripController.getUserTrips(request: Request, userId: Long)
GET         /api/users/:userId/trips/:tripId                controllers.TripController.fetchTrip(request: Request, tripId: Long, userId: Long)
PUT         /api/users/:userId/trips/:tripId                controllers.TripController.updateTrip(request: Request, tripId: Long, userId: Long)
PUT         /api/users/:userId/trips/:tripId/toggle_deleted controllers.TripController.softDeleteTrip(request: Request, tripId: Long, userId: Long)
GET         /api/users/:user_id/trips/:trip_id/iCal         controllers.TripController.getUserTripAsICalFile(request: Request, user_id: Long, trip_id: Long)
DELETE      /api/users/:userId/trips/:tripId/groups/:groupId controllers.TripController.deleteGroupFromTrip(request: Request, tripId: Long, userId: Long, groupId: Long)
PUT         /api/users/:userId/trips/:tripId/groups/:groupId controllers.TripController.addGroupToTrip(request: Request, tripId: Long, userId: Long, groupId: Long)
PUT         /api/users/:userId/trips/:nodeId/status        controllers.TripController.changeUserTripStatus(request: Request, nodeId: Long, userId: Long)


# Comments
POST        /api/users/:userId/trips/:tripId/comments       controllers.CommentController.createComment(request: Request, userId: Long, tripId: Long)
PUT         /api/users/:userId/trips/:tripId/comments/:commentId/toggle_deleted  controllers.CommentController.toggleDeleteComment(request: Request, userId: Long, tripId: Long, commentId: Long)
PUT         /api/users/:userId/trips/:tripId/comments/:commentId/emoji  controllers.CommentController.addUserEmoji(request: Request, userId: Long, tripId: Long, commentId: Long)



# NEEDED FOR STATIC VUE FILE SENDING DO NOT DELETE
GET     /assets/images/*file                    controllers.Assets.at(path="/public/images", file)
GET     /assets/profile_images/*file            controllers.Assets.at(path="/public/profile_images", file)
GET     /*file                                  controllers.FrontendController.assetOrDefault(file)


